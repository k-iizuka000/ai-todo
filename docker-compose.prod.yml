# Docker Compose: 本番環境設定
# 使用方法:
#   本番ビルド: docker-compose -f docker-compose.prod.yml build
#   本番起動: docker-compose -f docker-compose.prod.yml up -d
#   停止: docker-compose -f docker-compose.prod.yml down

version: '3.8'

services:
  # ===========================================
  # 本番アプリケーション: nginx + 静的ファイル
  # ===========================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: ai-todo-prod
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS（SSL証明書設定時）
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production  # 本番環境変数
    networks:
      - ai-todo-prod-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"  # Traefik使用時（オプション）
      - "traefik.http.routers.ai-todo.rule=Host(`your-domain.com`)"
      - "traefik.http.services.ai-todo.loadbalancer.server.port=80"

  # ===========================================
  # ログ収集: Fluentd（オプション）
  # ===========================================
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: ai-todo-fluentd
    volumes:
      - ./docker/fluentd.conf:/fluentd/etc/fluent.conf
      - fluentd-logs:/var/log/fluentd
    ports:
      - "24224:24224"
    networks:
      - ai-todo-prod-network
    profiles:
      - monitoring
    restart: unless-stopped

  # ===========================================
  # 監視: Prometheus + Grafana（オプション）
  # ===========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-todo-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - ai-todo-prod-network
    profiles:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: ai-todo-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # 本番では必ず変更
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - ai-todo-prod-network
    profiles:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

# ===========================================
# ボリューム設定
# ===========================================
volumes:
  fluentd-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# ===========================================
# ネットワーク設定
# ===========================================
networks:
  ai-todo-prod-network:
    driver: bridge