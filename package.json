{
  "name": "ai-todo",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "preinstall": "node scripts/check-docker.cjs",
    "prebuild": "node scripts/check-docker.cjs",
    "predev": "node scripts/check-docker.cjs",
    "pretest": "node scripts/check-docker.cjs",
    "prelint": "node scripts/check-docker.cjs",
    "pretype-check": "node scripts/check-docker.cjs",
    "prepreview": "node scripts/check-docker.cjs",
    "dev": "vite",
    "build": "tsc && vite build",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "type-check": "tsc --noEmit",
    "preview": "vite preview",
    "test": "vitest",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest --coverage",
    "test:ci": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:e2e": "vitest --config tests/e2e/vitest.config.ts",
    "test:e2e:run": "vitest run --config tests/e2e/vitest.config.ts",
    "test:playwright": "playwright test",
    "test:playwright:ui": "playwright test --ui",
    "test:playwright:debug": "playwright test --debug",
    "test:playwright:ci": "playwright test --reporter=html",
    "test:playwright:parallel": "playwright test --workers=4",
    "test:playwright:report": "playwright show-report",
    "test:integration": "npm run test:e2e -- integration.test.ts",
    "test:data-integrity": "npm run test:e2e -- data-integrity.test.ts",
    "test:performance": "npm run test:e2e -- performance.test.ts",
    "test:groups": "npm run test:e2e -- groups-integration.test.ts",
    "test:quality": "npm run test:e2e -- quality-validation.test.ts",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:reset": "prisma migrate reset",
    "db:seed": "prisma db seed",
    "db:studio": "prisma studio",
    "docker:dev": "docker-compose up",
    "docker:dev:build": "docker-compose up --build",
    "docker:install": "docker-compose exec app npm install",
    "docker:build": "docker-compose exec app npm run build",
    "docker:test": "docker-compose exec app npm test",
    "docker:test:watch": "docker-compose exec app npm run test:watch",
    "docker:test:coverage": "docker-compose exec app npm run test:coverage",
    "docker:test:e2e": "docker-compose exec app npm run test:e2e",
    "docker:test:playwright": "docker compose -f docker-compose.e2e.yml run --rm playwright npm run test:playwright",
    "docker:test:playwright:ui": "docker compose -f docker-compose.e2e.yml run --rm playwright npm run test:playwright:ui",
    "docker:test:playwright:debug": "docker compose -f docker-compose.e2e.yml run --rm playwright npm run test:playwright:debug",
    "docker:test:playwright:ci": "docker compose -f docker-compose.e2e.yml run --rm playwright npm run test:playwright:ci",
    "docker:test:playwright:report": "docker compose -f docker-compose.e2e.yml run --rm playwright npm run test:playwright:report",
    "docker:lint": "docker-compose exec app npm run lint",
    "docker:type-check": "docker-compose exec app npm run type-check",
    "docker:db:generate": "docker-compose exec app npm run db:generate",
    "docker:db:push": "docker-compose exec app npm run db:push",
    "docker:db:migrate": "docker-compose exec app npm run db:migrate",
    "docker:db:seed": "docker-compose exec app npm run db:seed",
    "docker:shell": "docker-compose exec app /bin/sh",
    "issue": "node issues/scripts/issue-manager.js",
    "issue:create": "node issues/scripts/issue-manager.js create",
    "issue:list": "node issues/scripts/issue-manager.js list",
    "issue:stats": "node issues/scripts/issue-manager.js stats",
    "issue:analyze": "node issues/scripts/issue-analyzer.js analyze",
    "workflow:execute": "node issues/scripts/agent-orchestrator.js execute",
    "workflow:status": "node issues/scripts/progress-tracker.js dashboard",
    "progress:dashboard": "node issues/scripts/progress-tracker.js dashboard",
    "security:scan": "node issues/scripts/security-checker.js scan",
    "security:check": "node issues/scripts/security-checker.js scan --verbose",
    "ai:agent": "node issues/scripts/agent-orchestrator.js"
  },
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@prisma/client": "^6.15.0",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-slot": "^1.2.3",
    "@tanstack/react-query": "^5.85.5",
    "@tanstack/react-query-devtools": "^5.85.5",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.298.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.6.0",
    "react-intersection-observer": "^9.16.0",
    "react-router-dom": "^6.20.1",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7",
    "web-vitals": "^5.1.0",
    "zod": "^3.23.8",
    "zustand": "^4.5.7"
  },
  "devDependencies": {
    "@axe-core/react": "^4.10.2",
    "@playwright/test": "^1.55.0",
    "@radix-ui/react-progress": "^1.1.7",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node-fetch": "^2.6.11",
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.14.0",
    "@vitejs/plugin-react": "^4.2.1",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.16",
    "eslint": "^8.55.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.5",
    "eslint-plugin-security": "^3.0.1",
    "jest-axe": "^10.0.0",
    "jsdom": "^26.1.0",
    "node-fetch": "^3.3.2",
    "playwright": "^1.55.0",
    "postcss": "^8.4.32",
    "prisma": "^6.15.0",
    "tailwindcss": "^3.3.6",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2",
    "vite": "^5.0.8",
    "vitest": "^3.2.4"
  },
  "prisma": {
    "seed": "ts-node --compiler-options {\"module\":\"CommonJS\"} prisma/seed.ts"
  }
}
